//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//     Versión de runtime:4.0.30319.42000
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace R2PB.AnalisisCodigo.RM.Repositorios {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Commit", Namespace="http://schemas.datacontract.org/2004/07/R2PB.AnalisisCodigo.SI.Datos.Repositorios" +
        "")]
    [System.SerializableAttribute()]
    public partial class Commit : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AutorCommitField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime FechaField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string HashField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NombreAutorRepositorioField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NombreRepositorioField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AutorCommit {
            get {
                return this.AutorCommitField;
            }
            set {
                if ((object.ReferenceEquals(this.AutorCommitField, value) != true)) {
                    this.AutorCommitField = value;
                    this.RaisePropertyChanged("AutorCommit");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime Fecha {
            get {
                return this.FechaField;
            }
            set {
                if ((this.FechaField.Equals(value) != true)) {
                    this.FechaField = value;
                    this.RaisePropertyChanged("Fecha");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Hash {
            get {
                return this.HashField;
            }
            set {
                if ((object.ReferenceEquals(this.HashField, value) != true)) {
                    this.HashField = value;
                    this.RaisePropertyChanged("Hash");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NombreAutorRepositorio {
            get {
                return this.NombreAutorRepositorioField;
            }
            set {
                if ((object.ReferenceEquals(this.NombreAutorRepositorioField, value) != true)) {
                    this.NombreAutorRepositorioField = value;
                    this.RaisePropertyChanged("NombreAutorRepositorio");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NombreRepositorio {
            get {
                return this.NombreRepositorioField;
            }
            set {
                if ((object.ReferenceEquals(this.NombreRepositorioField, value) != true)) {
                    this.NombreRepositorioField = value;
                    this.RaisePropertyChanged("NombreRepositorio");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="Repositorios.IRepositorios")]
    public interface IRepositorios {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRepositorios/GuardeElRepositorio", ReplyAction="http://tempuri.org/IRepositorios/GuardeElRepositorioResponse")]
        void GuardeElRepositorio(R2PB.AnalisisCodigo.RM.Repositorios.Commit[] losCommits, int idPaquete);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRepositorios/GuardeElRepositorio", ReplyAction="http://tempuri.org/IRepositorios/GuardeElRepositorioResponse")]
        System.Threading.Tasks.Task GuardeElRepositorioAsync(R2PB.AnalisisCodigo.RM.Repositorios.Commit[] losCommits, int idPaquete);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRepositorios/ValideSiSeDebeAnalizar", ReplyAction="http://tempuri.org/IRepositorios/ValideSiSeDebeAnalizarResponse")]
        bool ValideSiSeDebeAnalizar(R2PB.AnalisisCodigo.RM.Repositorios.Commit[] losCommits);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRepositorios/ValideSiSeDebeAnalizar", ReplyAction="http://tempuri.org/IRepositorios/ValideSiSeDebeAnalizarResponse")]
        System.Threading.Tasks.Task<bool> ValideSiSeDebeAnalizarAsync(R2PB.AnalisisCodigo.RM.Repositorios.Commit[] losCommits);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IRepositoriosChannel : R2PB.AnalisisCodigo.RM.Repositorios.IRepositorios, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class RepositoriosClient : System.ServiceModel.ClientBase<R2PB.AnalisisCodigo.RM.Repositorios.IRepositorios>, R2PB.AnalisisCodigo.RM.Repositorios.IRepositorios {
        
        public RepositoriosClient() {
        }
        
        public RepositoriosClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public RepositoriosClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public RepositoriosClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public RepositoriosClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public void GuardeElRepositorio(R2PB.AnalisisCodigo.RM.Repositorios.Commit[] losCommits, int idPaquete) {
            base.Channel.GuardeElRepositorio(losCommits, idPaquete);
        }
        
        public System.Threading.Tasks.Task GuardeElRepositorioAsync(R2PB.AnalisisCodigo.RM.Repositorios.Commit[] losCommits, int idPaquete) {
            return base.Channel.GuardeElRepositorioAsync(losCommits, idPaquete);
        }
        
        public bool ValideSiSeDebeAnalizar(R2PB.AnalisisCodigo.RM.Repositorios.Commit[] losCommits) {
            return base.Channel.ValideSiSeDebeAnalizar(losCommits);
        }
        
        public System.Threading.Tasks.Task<bool> ValideSiSeDebeAnalizarAsync(R2PB.AnalisisCodigo.RM.Repositorios.Commit[] losCommits) {
            return base.Channel.ValideSiSeDebeAnalizarAsync(losCommits);
        }
    }
}
